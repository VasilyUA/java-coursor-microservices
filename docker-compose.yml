version: '3.9'

services:
  Nginx:
    build:
      context: .
      dockerfile: ./dockers/nginx.dockerfile
    image: nginx
    container_name: nginx
    restart: always
    ports:
      - '3000:3000'
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - SecurityApplication
      - NoSqlApplication
    networks:
      - apps

  SecurityApplication:
    depends_on:
      - PhpMyAdmin
      - NoSqlApplication
    build: ./security
    image: security-app
    restart: always
    ports:
      - '5000'
    networks:
      - apps


  NoSqlApplication:
    depends_on:
      - MongoExpress
    build: ./NoSqlDB
    image: nosql-app
    restart: always
    ports:
      - '5001'
    networks:
      - apps


  MySqlDB:
    image: mysql:8.0
    container_name: mysqldb
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - ./database/data-mysql:/var/lib/mysql
    ports:
      - '3306:3306'
    expose:
      - 3306
    environment:
      MYSQL_DATABASE: security
      MYSQL_USER: admin
      MYSQL_PASSWORD: 55555
      MYSQL_ROOT_PASSWORD: 55555
    networks:
      - apps


  PhpMyAdmin:
    depends_on:
      - MySqlDB
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - '8080:80'
    environment:
      PMA_PORT: db
      MYSQL_ROOT_PASSWORD: 55555
    networks:
      - apps


  MongoDB:
    image: mongo:latest
    container_name: mongodb
    ports:
      - '27017:27017'
    expose:
      - 27017
    extra_hosts:
      - 127.0.0.1:127.0.0.1
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=55555
      - MONGO_INITDB_DATABASE=NoSqlDB
    volumes:
      - ./database/data-mongodb:/data/db
      - ./configs/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - apps


  MongoExpress:
    depends_on:
      - MongoDB
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 55555
      ME_CONFIG_MONGODB_SERVER: mongodb
    networks:
      - apps

  Zookeeper:
    image: bitnami/zookeeper:3.7.0
    container_name: zookeeper
    restart: always
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - apps


  Kafka:
    image: bitnami/kafka:2.8.0
    container_name: kafka
    restart: always
    ports:
      - '9092:9092'
      - '9094:9094'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT_INTERNAL://:9094,PLAINTEXT_EXTERNAL://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT_INTERNAL://kafka:9094,PLAINTEXT_EXTERNAL://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT_INTERNAL:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT_INTERNAL
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - Zookeeper
    networks:
      - apps


  KafkaUI:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: always
    ports:
      - '8083:8080'
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9094
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - Kafka
    networks:
      - apps

networks:
  apps:
    driver: bridge
volumes:
  MySqlDB:
  Mongodb: